Question 1
    What type of agent have you implemented (simple reflex agent, model-based reflex agent, goal-based agent, or utility-based agent)?
    
    We have implemented a goal based agent. 

Question 2
    A
        Fully Observable
    B
        Single Agent
    C
        Deterministic
    D
        Sequential. The agent decides which square to go on next based off of which treasures it already collected and which ones it needs to collect..
    E
        Static. None of the elements change during the traversal.
    F
        Discrete. grid cells, moves and treasure are all discrete.
    G
        Known. We have the full map from the beginning with all the info.

Question 3
    What heuristic did you use for A* search for this environment? Show that your heuristic is consistent.
    
    The heuristic we used is the Manhattan Heuristic which is commonly used for grids in which the agent can only move up, down, left or right.
    h(n) = min_(gEG) Manhattan(n,g)
    Manhattan distance = |r_n - r_g| + |c_n - c_g|

    For a heuristic to be consistent, it must satisfy the following two conditions:
    1. If for all nodes n and successors n' h(n) <= cost(n,n') + h(n')
        h(n) = |x-x_y|+|y-y_g|
        h(n') = |x'-x_y|+|y'-y_y|
        Since n' is a neighbour of n, either |x-x'|=1 and y=y' OR |y-y'|=1 and x=x'
        Therefore |x-x'|+|y-y'|=1 and n' is 1 unit away from n in L1 metric
        For any neighbour of n' of n, the step cost c(n, n') = 1. Manhattan(n,n') = 1
        
        For any fixed goal g, Manhattan(n,g) <= 1 + Manhattan(n',g) by the triangle inequality on the L1 metric
            Manhattan(n,g) <= Manhattan(n,n') + Manhattan(n',g)
            Plug in Manhattan(n,n') = 1
            Manhattan(n,g) <= 1 + Manhattan(n',g)
            h(n) <= 1 + h(n')
            h(n) <= c(n,n') + h(n')
        This satisfies our first condition.
    2. h(goal) = 0
        h(g) = min__(g'EG) d_1(g_1,g') <= d_1(g,g) = 0
        since d_1 >= 0 h(g) >= 0. Therefore h(g) = 0\
        This satisfies our second condition
    Therefore, h is consistent.

Question 4
    Suggest a particular instance of this problem (i.e. grid) where A* search using your heuristic would find the optimal solution faster than uniform cost search.
    
    S,0,2,3,G
    0,0,0,0,0
    X,X,0,X,0
    0,0,0,0,0

    USC gives all nodes at the same depth the same priority, so it would unessecarily explore the second row of the grid, 
    even though the agent doesn't need to go in the second row at all. A* search would pinpoint which direction is best to travel in and the agent would know to just go straight right on the first row and not explore the second row.
    They both give the same path in the end:
    USC: (0,0), (0,1), (0,2), (0,3), (0,4)
        Cost: 4
    Our Agent: (0,0), (0,1), (0,2), (0,3), (0,4)
        Cost: 4

Question 5
    Suggest a particular instance of this problem (i.e. grid) where a greedy heuristic search using your heuristic would not find the optimal solution

    S,0,G
    0,X,0
    5,0,0

    Greedy heuristic search expands the node with the smallest h and ignores the g value. It can cause the agent to backtrack when it doesnt need to.
    For example in this grid greedy heuristic search would go straight to the goal then backtrack to the treasure then head towards the goal again.
    Greedy Heuristic: (0,0), (0,1), (0,2), (0,1), (0,0), (1,0), (2,0), (2,1), (2,2), (1,2), (0,2)
        Cost: 10
    Our Agent: (0,0), (1,0), (2,0), (2,1), (2,2), (1,2), (0,2)
        Cost: 6


Question 6
    Consider a modification of this problem where your agent need only pick up treasures with value totalling at least 1. Determine whether your heuristic is still consistent

    A smaller treasure value does not change the consistency of our heuristic.
    All our logic in Question 3 still applies when we need 1 treasure.
    h(n) = min_(gEG) Manhattan(n,g)
    Manhattan distance = |r_n - r_g| + |c_n - c_g|
    For any neighbour of n' of n, the step cost c(n, n') = 1. For any fixed goal g, Manhattan(n,g) <= 1 + Manhattan(n',g) by the triangle inequality on the L1 metric
    Taking the minimum:
        h(n) = min_g Manhattan(n,g) <= 1 + min_g Manhattan(n',g) = 1+h(n')
    Therefore h is consistent
